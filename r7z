#!/usr/bin/env python3


import pathlib
import subprocess
import sys


def main():
    missing_requirements = get_missing_requirements()
    if missing_requirements:
        print('\n'.join(missing_requirements))
        sys.exit(1)

    if is_missing_command_line_arguments():
        print_usage()
        sys.exit(0)

    r7z(sys.argv[1])


def get_missing_requirements():
    missing_requirements = []
    missing_requirements.append(check_version_number())
    missing_requirements.append(check_7z())
    if missing_requirements:
        print('\n'.join(missing_requirements))


def check_version_number():
    if sys.version_info < (3, 5):
        return 'Requires Python 3.5+'
    return ''


def check_7z():
    try:
        result = subprocess.run(['7z'], stdout=subprocess.DEVNULL)
    except FileNotFoundError:
        return 'Requires 7z'
    return ''


def is_missing_command_line_arguments():
    return len(sys.argv) < 2


def print_usage():
    print('usage:', sys.argv[0], 'FILE_OR_DIRECTORY')


SUPPORTED_EXTENSIONS = '.7z .xz .zip .gz .gzip .tgz .bz2 .bzip2 .tbz2 .tbz .tar .rar .z .taz'.split()


def r7z(file_):
    file_ = pathlib.Path(file_)
    todo = [file_]
    while todo:
        file_ = todo.pop()
        if file_.is_dir():
            todo.extend(list(file_.iterdir()))
        elif file_.is_file() and file_.suffix in SUPPORTED_EXTENSIONS:
            directory = file_.parent.joinpath(file_.stem)
            subprocess.run(['7z', 'x', '-o' + str(directory), str(file_)])
            todo.append(pathlib.Path(directory))


if __name__ == '__main__':
    main()
